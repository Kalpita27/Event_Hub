{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, _router) {\n    this.http = http;\n    this._router = _router;\n    this._loginUrl = \"http://localhost:3000/api/login\";\n  }\n  loginUser(user) {\n    return this.http.post(this._loginUrl, user);\n  }\n  logoutUser() {\n    localStorage.removeItem('token');\n    this._router.navigate(['/events']);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  loggedIn() {\n    return !!localStorage.getItem('token');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac\n});","map":{"version":3,"mappings":";;;AAKA,OAAM,MAAOA,WAAW;EAKtBC,YAAoBC,IAAgB,EAChBC,OAAe;IADf,SAAI,GAAJD,IAAI;IACJ,YAAO,GAAPC,OAAO;IAHnB,cAAS,GAAG,iCAAiC;EAGd;EAEvCC,SAAS,CAACC,IAAS;IACjB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,IAAI,CAACC,SAAS,EAAEF,IAAI,CAAC;EAClD;EAEAG,UAAU;IACRC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACP,OAAO,CAACQ,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;EACpC;EAEAC,QAAQ;IACN,OAAOH,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,QAAQ;IACN,OAAO,CAAC,CAACL,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;EACxC;;AAvBWb,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAe,SAAXf,WAAW;AAAA","names":["AuthService","constructor","http","_router","loginUser","user","post","_loginUrl","logoutUser","localStorage","removeItem","navigate","getToken","getItem","loggedIn","factory"],"sourceRoot":"","sources":["D:\\Angular\\Event_hub\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router'\n\n@Injectable()\nexport class AuthService \n{\n\n  private _loginUrl = \"http://localhost:3000/api/login\";\n\n  constructor(private http: HttpClient,\n              private _router: Router) { }\n\n  loginUser(user: any) {\n    return this.http.post<any>(this._loginUrl, user)\n  }\n\n  logoutUser() {\n    localStorage.removeItem('token')\n    this._router.navigate(['/events'])\n  }\n\n  getToken() {\n    return localStorage.getItem('token')\n  }\n\n  loggedIn() {\n    return !!localStorage.getItem('token')    \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}