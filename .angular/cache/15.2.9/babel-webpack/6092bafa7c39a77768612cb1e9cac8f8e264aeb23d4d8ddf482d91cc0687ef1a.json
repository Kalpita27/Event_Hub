{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nvar AddDetailsComponent = /** @class */function () {\n  function AddDetailsComponent(fbobj) {\n    this.fbobj = fbobj;\n    this.MarvellousForm = this.fbobj.group({\n      // Add validations\n      username: ['', Validators.required],\n      passowrd: ['', Validators.required],\n      ConfirmPass: [''],\n      MarvellousClass: this.fbobj.group({\n        batch: ['Python'],\n        fees: ['5000']\n      })\n    });\n  }\n  // Method to set FormControl fields through program\n  AddDetailsComponent.prototype.SetData = function () {\n    this.MarvellousForm.setValue({\n      username: 'Piyush',\n      passowrd: 'abcd',\n      ConfirmPass: 'abcd',\n      MarvellousClass: {\n        batch: 'Python',\n        fees: '5000'\n      }\n    });\n  };\n  AddDetailsComponent.ɵfac = function AddDetailsComponent_Factory(t) {\n    return new (t || AddDetailsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  AddDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddDetailsComponent,\n    selectors: [[\"app-add-details\"]],\n    decls: 37,\n    vars: 12,\n    consts: [[1, \"container-fluid\"], [3, \"formGroup\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\"], [1, \"text-danger\"], [\"type\", \"password\", \"formControlName\", \"passowrd\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"ConfirmPass\", 1, \"form-control\"], [\"formGroupName\", \"MarvellousClass\"], [\"type\", \"text\", \"formControlName\", \"batch\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"fees\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"ml-3\", 3, \"click\"]],\n    template: function AddDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"h2\");\n        i0.ɵɵtext(4, \"Marvellous Login Form\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 1)(6, \"div\", 2)(7, \"label\");\n        i0.ɵɵtext(8, \"User Name \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵelementStart(10, \"small\", 4);\n        i0.ɵɵtext(11, \"Username is required\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\");\n        i0.ɵɵtext(14, \"Password \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 5);\n        i0.ɵɵelementStart(16, \"small\", 4);\n        i0.ɵɵtext(17, \"Password is required\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 2)(19, \"label\");\n        i0.ɵɵtext(20, \"Confirm Password \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 7)(23, \"div\", 2)(24, \"label\");\n        i0.ɵɵtext(25, \"Batch Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 2)(28, \"label\");\n        i0.ɵɵtext(29, \"Fees\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"button\", 10);\n        i0.ɵɵtext(32, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AddDetailsComponent_Template_button_click_33_listener() {\n          return ctx.SetData();\n        });\n        i0.ɵɵtext(34, \"Set Values\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(35);\n        i0.ɵɵpipe(36, \"json\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        var tmp_1_0 = void 0;\n        var tmp_2_0 = void 0;\n        var tmp_3_0 = void 0;\n        var tmp_4_0 = void 0;\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.MarvellousForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"is-invalid\", (tmp_1_0 = ctx.MarvellousForm.get(\"username\")) == null ? null : tmp_1_0.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"d-none\", (tmp_2_0 = ctx.MarvellousForm.get(\"username\")) == null ? null : tmp_2_0.valid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵclassProp(\"is-invalid\", ((tmp_3_0 = ctx.MarvellousForm.get(\"passowrd\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.MarvellousForm.get(\"passowrd\")) == null ? null : tmp_3_0.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"d-none\", ((tmp_4_0 = ctx.MarvellousForm.get(\"passowrd\")) == null ? null : tmp_4_0.valid) || ((tmp_4_0 = ctx.MarvellousForm.get(\"passowrd\")) == null ? null : tmp_4_0.untouched));\n        i0.ɵɵadvance(19);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(36, 10, ctx.MarvellousForm.value), \" \");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i2.JsonPipe]\n  });\n  return AddDetailsComponent;\n}();\nexport { AddDetailsComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}